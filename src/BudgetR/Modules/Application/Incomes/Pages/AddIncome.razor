@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager
@using BudgetR.Core.Models;
@using BudgetR.Modules.Components
@using BudgetR.Server.Application.Handlers.Incomes;
@using BudgetR.Server.Application.Handlers.BudgetMonths;

@page "/incomes/add"

<MudGrid>
    <MudItem xs="12">
        <h2>Add Income</h2>
    </MudItem>
    <MudItem xs="4" Class="mt-4">
        <MudPaper>
            <MudGrid Class="pa-3">
                <MudItem xs="12" Class="pt-0">
                    Add Income
                </MudItem>
                <MudItem xs="12">
                    <MudTextField @bind-Value="Name" Label="Name" Variant="Variant.Filled"></MudTextField>
                </MudItem>
                <MudItem xs="12">
                    <MudTextField T="decimal" @bind-Value="Amount" Label="Filled" Variant="Variant.Filled"></MudTextField>
                </MudItem>
                <MudItem xs="12">
                    <MonthSelectionComponent MonthSelection="@MonthSelection" />
                </MudItem>
                <MudItem xs="12">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" OnClick="@(()=>Create())">Add Income</MudButton>
                </MudItem>
            </MudGrid>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    public string Name { get; set; }
    public decimal Amount { get; set; }

    public MonthSelection MonthSelection;

    //create income
    private async void Create()
    {
        var request = new Add.Request
            {
                Name = Name,
                Amount = Amount,
                MonthSelection = MonthSelection
            };

        var result = await _mediator.Send(request);

        if (result.IsSuccess)
        {
            Snackbar.Add($"{Name} income has been created.", Severity.Success);
            NavigationManager.NavigateTo("/incomes");
        }
        else
        {
            Snackbar.Add("Cannot create income.", Severity.Error);
        }
    }
}
